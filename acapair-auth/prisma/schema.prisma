generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") 
}

// Role enum
enum UserRole {
  USER
  ADMIN
}

// User model
model User {
  id        String @id @default(cuid())
  name      String? @unique
  image     String?
  email     String @unique
  emailVerified DateTime?
  password  String?
  isTwoFactorEnabled Boolean @default(false)
  twoFactorConfirmation TwoFactorConfirmation?
  role UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


// Verification token model
model VertificationToken {
  id        String @id @default(cuid())
  email     String 
  token     String @unique
  expiresAt DateTime
  emailSentAt DateTime?
  emailSentId String?

  @@unique([email, token])
}

// Password reset token model
model PasswordResetToken{
  id        String @id @default(cuid())
  email     String 
  token     String @unique
  expiresAt DateTime
  emailSentAt DateTime?
  emailSentId String?

  @@unique([email, token])
}

model TwoFactorToken{
  id        String @id @default(cuid())
  email     String 
  token     String @unique
  expiresAt DateTime
  emailSentAt DateTime?
  messageId String?
  
  @@unique([email, token])
}

model TwoFactorConfirmation{
  id       String @id @default(cuid())
  userId     String 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId])
}